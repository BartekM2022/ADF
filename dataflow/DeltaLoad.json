{
	"name": "DeltaLoad",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "Staging"
				},
				{
					"name": "Inventory"
				}
			],
			"sinks": [
				{
					"name": "InventorySink"
				},
				{
					"name": "InventorySinkInsert"
				},
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Update"
				},
				{
					"name": "SetUpdateToAllRows"
				},
				{
					"name": "Instert"
				},
				{
					"name": "Delete"
				},
				{
					"name": "DeleteRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          Data1 as string,",
				"          Data2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> Staging",
				"source(output(",
				"          ID as integer,",
				"          Data1 as string,",
				"          Data2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> Inventory",
				"Staging, Inventory exists(Staging@ID==Inventory@ID && (Staging@Data1!=Inventory@Data1||Staging@Data2!=Inventory@Data2),",
				"     negate:false,",
				"     broadcast: 'left')~> Update",
				"Update alterRow(updateIf(true())) ~> SetUpdateToAllRows",
				"Staging, Inventory exists(Staging@ID == Inventory@ID,",
				"     negate:true,",
				"     broadcast: 'auto')~> Instert",
				"Inventory, Staging exists(Inventory@ID == Staging@ID,",
				"     negate:true,",
				"     broadcast: 'auto')~> Delete",
				"Delete alterRow(deleteIf(true())) ~> DeleteRows",
				"SetUpdateToAllRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> InventorySink",
				"Instert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> InventorySinkInsert",
				"DeleteRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> sink1"
			]
		}
	}
}