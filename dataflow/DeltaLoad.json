{
	"name": "DeltaLoad",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Inventory",
						"type": "DatasetReference"
					},
					"name": "Inventory"
				},
				{
					"dataset": {
						"referenceName": "Staging",
						"type": "DatasetReference"
					},
					"name": "Staging"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Inventory",
						"type": "DatasetReference"
					},
					"name": "InventorySink"
				}
			],
			"transformations": [
				{
					"name": "Update"
				},
				{
					"name": "SetUpdateToAllRows"
				},
				{
					"name": "SelectColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          Number as integer,",
				"          Data1 as string,",
				"          Data2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Inventory",
				"source(output(",
				"          ID as integer,",
				"          Number as integer,",
				"          Data1 as string,",
				"          Data2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Staging",
				"Inventory, Staging exists(Inventory@Number==Staging@Number && (Inventory@Data1!=Staging@Data1),",
				"     negate:false,",
				"     broadcast: 'left')~> Update",
				"SelectColumns alterRow(updateIf(true())) ~> SetUpdateToAllRows",
				"Update select(mapColumn(",
				"          Number,",
				"          Data1,",
				"          Data2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"SetUpdateToAllRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          Number as integer,",
				"          Data1 as string,",
				"          Data2 as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['Number'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> InventorySink"
			]
		}
	}
}